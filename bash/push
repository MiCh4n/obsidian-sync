#!/usr/bin/env bash

set -e
set -u

## Lockfile command
lock_file_or_dir="/var/lock/push-obsidian-sync"
cmd_locking="mkdir ${lock_file_or_dir}"
cmd_check_lock="test -d ${lock_file_or_dir}"
cmd_unlocking="rm -rf ${lock_file_or_dir}"

## Manage Lockfile
function is_running()
{
    local cmd_check_lock=${1}
    
    ${cmd_check_lock} || {
        return 1
    }
    
    return 0
}

function create_lock()
{
    local cmd_locking=${1}
    
    ${cmd_locking} || {
        printf "Cannot create lock\\n"
        exit 2
    }
}

function remove_lock()
{
    local cmd_unlocking="${1}"
    
    ${cmd_unlocking} || {
        printf "Cannot unlock\\n"
        exit 3
    }
}

trap 'remove_lock "${cmd_unlocking}"' SIGINT SIGTERM

if is_running "${cmd_check_lock}"; then
    printf "Cannot acquire lock -> exiting\\n"
    exit 1
fi

create_lock "${cmd_locking}"


## Important variables
PATH_TO_APOCRYPTA_GLOBAL="$HOME/Documents/apocrypta-global"
PATH_TO_KEY="$HOME/Documents/apocrypta-global/apocrypta-key"
CURRENT_DATE=$(date "+%F %H:%M")

## Script body
### 0. Go to apocrypta-global
cd "$PATH_TO_APOCRYPTA_GLOBAL" || {
    remove_lock "${cmd_unlocking}"
    printf "Cannot cd to $PATH_TO_APOCRYPTA_GLOBAL -> exiting"
    exit 1
}

### 1. Create tar archive
tar -cf "apocrypta-vault.tar" -C "apocrypta-vault" "." || {
    remove_lock "${cmd_unlocking}"
    printf "Cannot tar apocrypta-vault -> exiting"
    exit 2
}

age -e -i $PATH_TO_KEY -o "apocrypta-vault.tar.enc" "apocrypta-vault.tar" || {
    remove_lock "${cmd_unlocking}"
    printf "Cannot encrypt archive -> exiting"
    exit 3
}

### 2. Move to desired repository then commit and push to remote
mv "apocrypta-vault.tar.enc" "apocrypta/apocrypta-vault.tar.enc" || {
    remove_lock "${cmd_unlocking}"
    printf "Cannot move archive to repository -> exiting"
    exit 4
}

cd "$PATH_TO_APOCRYPTA_GLOBAL/apocrypta" || {
    remove_lock "${cmd_unlocking}"
    printf "Cannot cd to $PATH_TO_APOCRYPTA_GLOBAL/apocrypta -> exiting"
    exit 5
}

git add "apocrypta-vault.tar.enc" || {
    remove_lock "${cmd_unlocking}"
    printf "Cannot git add apocrypta-vault.tar.enc -> exiting"
    exit 6
}

git commit -m "$CURRENT_DATE" || {
    remove_lock "${cmd_unlocking}"
    printf "Cannot git commit -> exiting"
    exit 7
}

git push origin main || {
    remove_lock "${cmd_unlocking}"
    printf "Cannot git push origin main -> exiting"
    exit 7
}

## end body

remove_lock "${cmd_unlocking}"